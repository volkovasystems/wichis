{"version":3,"sources":["test.support.js"],"names":["assert","require","wichis","equal","test","hello","deepEqual","Infinity","arguments","test4","procedure","Error","undefined","NaN","toString","ClassA","testA","console","log"],"mappings":"4cAAA,IAAMA,SAASC,QAAS,QAAT,CAAf;AACA,IAAMC,SAASD,QAAS,aAAT,CAAf;;AAEAD,OAAOG,KAAP,CAAcD,OAAQ,KAAR,EAAe,IAAf,CAAd,EAAqC,IAArC,EAA2C,oBAA3C;;AAEAF,OAAOG,KAAP,CAAcD,OAAQ,CAAR,EAAW,OAAX,EAAoB,IAApB,CAAd,EAA0C,CAA1C,EAA6C,iBAA7C;;AAEAF,OAAOG,KAAP,CAAcD,OAAQ,EAAR,EAAY,MAAZ,EAAoB,EAApB,CAAd,EAAyC,MAAzC,EAAiD,4BAAjD;;AAEA,IAAIE,OAAO,SAASC,KAAT,GAAiB,CAAG,CAA/B;AACAL,OAAOM,SAAP,CAAkBJ,OAAQ,KAAR,EAAe,mBAAY,IAAZ,CAAf,EAAmCE,IAAnC,CAAlB,EAA6DA,IAA7D,EAAmE,oCAAnE;;AAEAJ,OAAOM,SAAP,CAAkBJ,OAAQ,mBAAY,SAAZ,CAAR,EAAiC,EAAjC,EAAsC,IAAtC,CAAlB,EAAgE,mBAAY,SAAZ,CAAhE,EAAyF,uCAAzF;;AAEAF,OAAOG,KAAP,CAAcD,OAAQ,EAAR,EAAYK,QAAZ,EAAsB,IAAtB,CAAd,EAA4CA,QAA5C,EAAsD,wBAAtD;;AAEAP,OAAOM,SAAP,CAAkBJ,OAAQ,EAAR,EAAY,KAAZ,EAAmBM,SAAnB,CAAlB,EAAkDA,SAAlD,EAA6D,yBAA7D;;AAEA,IAAIC,QAAQ,SAASJ,KAAT,GAAiB,CAAE,OAAO,OAAP,CAAgB,CAA/C;AACAL,OAAOM,SAAP,CAAkBJ,OAAQO,KAAR;AACb,SAASC,SAAT,GAAqB,CAAE,MAAM,IAAIC,KAAJ,CAAW,cAAX,CAAN,CAAmC,CAD7C,CAAlB;AAEKF,KAFL,EAEY,mDAFZ;;AAIAT,OAAOM,SAAP,CAAkBJ,OAAQ,KAAR,EAAe,EAAf,EAAoB,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAApB,CAAlB,EAAqD,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAArD,EAAkE,2BAAlE;;AAEAF,OAAOM,SAAP,CAAkBJ,OAAQ,EAAR,EAAa,EAAb,CAAlB,EAAsC,EAAtC,EAA2C,mBAA3C;;AAEAF,OAAOM,SAAP,CAAkBJ,OAAQ,EAAR,EAAa,CAAE,OAAF,CAAb,EAA0B,EAAE,SAAS,OAAX,EAA1B,CAAlB,EAAoE,CAAE,OAAF,CAApE,EAAiF,2BAAjF;;AAEAF,OAAOM,SAAP,CAAkBJ,OAAQ,CAAR,EAAW,EAAX,EAAgB,EAAhB,CAAlB,EAAyC,EAAzC,EAA8C,mBAA9C;;AAEAF,OAAOG,KAAP,CAAcD,OAAQ,CAAR,EAAW,EAAX,EAAgB,IAAhB,CAAd,EAAsC,IAAtC,EAA4C,4BAA5C;;AAEAF,OAAOG,KAAP,CAAcD,OAAQ,IAAR,EAAcU,SAAd,EAAyBC,IAAIC,QAAJ,EAAzB,EAA0C,IAA1C,CAAd,EAAgED,IAAIC,QAAJ,EAAhE,EAAiF,wCAAjF,E;;AAEMC,M;AACL,mBAAc,6CAAG,C;AACR,GAAE,OAAO,OAAP,CAAiB,C;;;AAG7B,IAAIC,QAAQ,IAAID,MAAJ,EAAZ;AACAf,OAAOM,SAAP,CAAkBJ,OAAQ,EAAR,EAAac,KAAb,CAAlB,EAAwCA,KAAxC,EAA+C,uCAA/C;;AAEAhB,OAAOM,SAAP,CAAkBJ,OAAQc,KAAR,EAAe,EAAf,CAAlB,EAAwC,EAAxC,EAA6C,mBAA7C;;AAEAC,QAAQC,GAAR,CAAa,IAAb","file":"test.support.js","sourcesContent":["const assert = require( \"assert\" );\r\nconst wichis = require( \"./wichis.js\" );\r\n\r\nassert.equal( wichis( false, true ), true, \"should return true\" );\r\n\r\nassert.equal( wichis( 1, \"hello\", true ), 1, \"should return 1\" );\r\n\r\nassert.equal( wichis( \"\", \"yeah\", { } ), \"yeah\", \"should return value 'yeah'\" );\r\n\r\nlet test = function hello( ){ };\r\nassert.deepEqual( wichis( false, Symbol.for( \"id\" ), test ), test, \"should return function hello( ){ }\" );\r\n\r\nassert.deepEqual( wichis( Symbol.for( \"cloaked\" ), { }, true ), Symbol.for( \"cloaked\" ), \"should return Symbol.for( 'cloaked' )\" );\r\n\r\nassert.equal( wichis( \"\", Infinity, true ), Infinity, \"should return Infinity\" );\r\n\r\nassert.deepEqual( wichis( \"\", false, arguments ), arguments, \"should return arguments\" );\r\n\r\nlet test4 = function hello( ){ return \"hello\" };\r\nassert.deepEqual( wichis( test4,\r\n\t\t\t\t\tfunction procedure( ){ throw new Error( \"no operation\" ) } ),\r\n\t\t\t\t\ttest4, \"should return function hello( ){ return 'hello' }\" );\r\n\r\nassert.deepEqual( wichis( false, [ ], [ 1, 2, 3 ] ), [ 1, 2, 3 ], \"should return [ 1, 2, 3 ]\" );\r\n\r\nassert.deepEqual( wichis( { }, [ ] ), [ ], \"should return [ ]\" );\r\n\r\nassert.deepEqual( wichis( { }, [ \"hello\" ], { \"hello\": \"world\" } ), [ \"hello\" ], \"should return [ 'hello' ]\" );\r\n\r\nassert.deepEqual( wichis( 0, { }, [ ] ), [ ], \"should return [ ]\" );\r\n\r\nassert.equal( wichis( 0, { }, true ), true, \"should return boolean true\" );\r\n\r\nassert.equal( wichis( null, undefined, NaN.toString( ), true ), NaN.toString( ), \"should return value of NaN.toString( )\" );\r\n\r\nclass ClassA{\r\n\tconstructor( ){ }\r\n\tmethod( ){ return \"hello\"; }\r\n}\r\n\r\nlet testA = new ClassA( );\r\nassert.deepEqual( wichis( { }, testA ), testA, \"should return value of testA variable\" );\r\n\r\nassert.deepEqual( wichis( testA, { } ), { }, \"should return { }\" );\r\n\r\nconsole.log( \"ok\" );\r\n"]}